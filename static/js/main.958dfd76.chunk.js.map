{"version":3,"sources":["constants/index.js","components/Typography.js","components/ListItem.js","components/Toolbar.js","components/Loader.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["imageUrl","APIKEY","process","styles","header","fontSize","fontWeight","body","Typography","props","variant","style","children","listItem","width","margin","listItemContent","height","overflow","marginBottom","cursor","image","hoverCover","position","ListItemContent","styled","div","ListItem","onClick","src","alt","title","name","toolbar","display","padding","background","logo","alignSelf","Toolbar","Spin","keyframes","LoaderIcon","img","Loader","modal","top","bottom","left","right","borderRadius","boxShadow","imageContainer","closeIcon","textAlign","details","maxHeight","genres","pill","border","color","loader","justifyContent","alignItems","Modal","useState","data","setData","useEffect","a","axios","get","movieId","fetchData","Fragment","closeModal","tagline","modalContent","runtime","_","map","genre","key","id","root","fontFamily","flexDirection","flex","marginTop","content","flexWrap","movie","App","modalIsOpen","setOpenModal","selectedMovie","setSelectedMovie","filter","results","popularity","poster_path","overview","backdrop_path","movieImg","openModal","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.958dfd76.chunk.js","sourcesContent":["export const imageUrl = 'https://image.tmdb.org/t/p/w500';\n\nexport const APIKEY = process.env.REACT_APP_API_KEY;","import React from 'react';\n\nconst styles = {\n\theader: {\n\t\tfontSize: 42,\n\t\tfontWeight: 500,\n\t},\n\tbody: {\n\t\tfontSize: 19,\n\t\tfontWeight: 400,\n\t}\n}\n\nexport default function Typography(props) {\n\tlet variant;\n\n\tswitch(props.variant) {\n\t\tcase \"header\":\n\t\t\tvariant = 'header';\n\t\t\tbreak;\n\t\tcase \"body\":\n\t\t\tvariant = 'body';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvariant = 'body';\n\t} \n\t\n\treturn (\n\t\t<div style={styles[variant]}>{props.children}</div>\n\t)\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Typography from './Typography';\n\nconst styles = {\n\tlistItem: {\n\t    width: 200,\n\t    margin: 10,\n\t},\n\tlistItemContent: {\n\t\theight: 300,\n\t\twidth: 200,\n\t\toverflow: 'hidden',\n\t\tmarginBottom: 10,\n\t\tcursor: 'pointer',\n\t},\n\timage: {\n\t\theight: '100%',\n\t},\n\thoverCover: {\n\t\tposition: 'absolute',\n\t}\n}\n\nconst ListItemContent = styled.div`\n\tborder: 6px solid black;\n\t&:hover {\n\t    border: 6px solid orange;\n\t}\n`\n\nexport default function ListItem(props) {\n\treturn (\n\t\t<div style={styles.listItem} onClick={props.onClick}>\n\t        <ListItemContent style={styles.listItemContent}>\n\t        \t<img style={styles.image} src={props.imageUrl} alt={props.title}/>\n\t        </ListItemContent>\n\t        <Typography variant=\"body\">{props.name}</Typography>\n        </div>\n\t)\n}\n\n","import React from 'react';\n\nconst styles = {\n\ttoolbar: {\n\t    display: 'flex',\n\t    padding: '15px 25px',\n\t    position: 'fixed',\n\t    height: 50,\n\t    background: 'white',\n\t    width: '100%',\n\t},\n\tlogo: {\n\t    alignSelf: 'center',\n\t    height: 45,\n\t},\n}\n\nexport default function Toolbar(props) {\n\treturn (\n\t\t<div style={styles.toolbar}>\n\t        <img style={styles.logo} src=\"tiff-logo.jpg\" alt=\"tiff logo\"/>\n\t    </div>\n\t)\n}\n\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Spin = keyframes`\n\t0% { \n\t\ttransform: rotate(0deg);\n\t}\n\t100% {\n\t\ttransform: rotate(360deg);\n\t}\n`\nconst LoaderIcon = styled.img `\n\tanimation: ${Spin} 2s linear infinite;\n\theight: 50px;\n`\n\nexport default function Loader() {\n  return (\n    <LoaderIcon src=\"tiff-movie-icon.png\" />\n  )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport { APIKEY } from '../constants';\n\nimport Typography from './Typography';\nimport Loader from './Loader';\n\nconst styles = {\n  modal: {\n    background: 'white',\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: '3% 20%',\n    padding: 20,\n    borderRadius: 2,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    overflow: 'auto',\n  },\n  imageContainer: {\n    height: 280,\n    margin: '15px 0px',\n    overflow: 'hidden',\n  },\n  image: {\n    width: '100%',\n  },\n  closeIcon: {\n    cursor: 'pointer',\n    textAlign: 'right',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    padding: 10,\n    height: 20,\n  },\n  details: {\n    maxHeight: 95,\n    overflow: 'auto',\n    margin: '10px 0',\n  },\n  genres: {\n    display: 'flex',\n  },\n  pill : {\n    border: '1px solid orange',\n    borderRadius: 2,\n    padding: 5,\n    margin: '0px 5px',\n    color: 'orange',\n  },\n  loader: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n  }\n}\n\nexport default function Modal(props) {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${props.movieId}?api_key=${APIKEY}`);\n      setData(data)\n    };\n    fetchData();\n  }, []);\n\n  return (\n      <div style={styles.modal}>\n        {data ? (\n          <React.Fragment>\n            <img style={styles.closeIcon} src=\"close-icon.png\" onClick={props.closeModal} />\n            <div style={styles.imageContainer}>\n              <img style={styles.image} src={props.imageUrl} alt={props.title}/>\n            </div>\n            <Typography variant=\"body\">{props.title}</Typography>\n            <p>{data.tagline}</p>\n            <div style={styles.modalContent}>\n              <div style={styles.details}>{props.details}</div>\n              <p>Runtime: {data.runtime}</p>\n              <div style={styles.genres}>\n                {_.map(data.genres, genre => (\n                  <div key={genre.id} id={data.id} style={styles.pill}>{genre.name}</div>\n                ))}\n              </div>\n            </div>\n          </React.Fragment>\n        ) : (\n          <div style={styles.loader}>\n            <Loader />\n          </div>\n        )}\n      </div>\n  );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport { imageUrl, APIKEY } from './constants';\n\nimport ListItem from './components/ListItem';\nimport Toolbar from './components/Toolbar';\nimport Modal from './components/Modal';\nimport Loader from './components/Loader';\n\nconst styles = {\n  root: {\n    fontFamily: \"Roboto\",\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  body: {\n    flex: 1,\n    padding: '20px 40px',\n    background: 'black',\n    marginTop: 80,\n  },\n  loader: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  movie: {\n    display: 'flex'\n  },\n}\n\nfunction App() {\n  const [data, setData] = useState();\n  const [modalIsOpen, setOpenModal] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState('');\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const { data } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=release_date.desc&primary_release_year=2019&vote_count.gte=10`);\n      setData(_.filter(data.results, movie => movie.popularity > 10));\n    };\n    fetchData();\n  }, []);\n\n  const openModal = (id) => {\n    setOpenModal(true);\n    setSelectedMovie(id);\n  }\n\n  const closeModal = () => {\n    setOpenModal(false);\n  }\n\n  return (\n    <div style={styles.root}>\n      <Toolbar />\n        {data ? (\n          <div style={styles.body}>\n            <div style={styles.content}>\n                {_.map(data, movie => {\n                    const { id, title, poster_path, overview, backdrop_path } = movie;\n                    const movieImg = backdrop_path ? backdrop_path : poster_path;\n                    \n                    return (\n                      <div key={id} style={styles.movie}>\n                        <ListItem\n                          key={id} \n                          name={title}\n                          imageUrl={imageUrl+poster_path}\n                          onClick={()=> openModal(id)}\n                          title={title}\n                        />\n                        {modalIsOpen && selectedMovie === id && \n                          <Modal\n                            closeModal={closeModal}\n                            imageUrl={imageUrl + movieImg}\n                            title={title}\n                            details={overview}\n                            movieId={id}\n                          />\n                        }\n                      </div>\n                    )\n                  })}\n            </div>\n          </div>    \n          ) : (\n            <div style={styles.loader}>\n              <Loader />\n            </div>\n          )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}